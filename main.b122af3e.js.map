{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","headers","querySelectorAll","rowtable","currentSortIndex","currentSortDirection","forEach","th","index","addEventListener","rows","Array","from","isNumberColumn","sort","a","b","aText","cells","textContent","trim","bText","aValue","parseFloat","replace","bValue","row","appendChild","r","classList","remove","add","form","createElement","className","action","method","body","nameLabel","nameInput","type","name","required","setAttribute","positionLabel","positionInput","officeLabel","officeSelect","offices","office","option","ageLabel","ageInput","min","salaryLabel","salaryInput","rawValue","value","numericValue","isNaN","toLocaleString","button","validateForm","namee","position","age","salary","length","pushNotification","parsedAge","parseInt","parsedSalary","posTop","posRight","title","description","notification","style","cssText","innerHTML","setTimeout","e","preventDefault","options","activeInputCell","saveCellChanges","cellRow","input","origanalText","newValue","target","tagName","focus","even","key"],"mappings":";AAAA,aAGA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQH,EAAME,cAAc,SAC5BE,EAAUJ,EAAMK,iBAAiB,MACjCC,EAAWN,EAAMK,iBAAiB,MAGpCE,GAAoB,EAEpBC,EAAuB,MAG3BJ,EAAQK,QAAQ,SAACC,EAAIC,GACnBD,EAAGE,iBAAiB,QAAS,WAErBC,IAAAA,EAAOC,MAAMC,KAAKZ,EAAME,iBAAiB,OAEzCW,EAA2B,IAAVL,GAAyB,IAAVA,EAKpCH,EAFEG,IAAUJ,GAEoC,QAAzBC,EAAiC,OAGjC,MAGzBD,EAAmBI,EAGnBE,EAAKI,KAAK,SAACC,EAAGC,GAENC,IAAAA,EAAQF,EAAEG,MAAMV,GAAOW,YAAYC,OACnCC,EAAQL,EAAEE,MAAMV,GAAOW,YAAYC,OAErCP,GAAAA,EAAgB,CAEZS,IAAAA,EAASC,WAAWN,EAAMO,QAAQ,QAAS,KAC3CC,EAASF,WAAWF,EAAMG,QAAQ,QAAS,KAG1CnB,MAAyB,QAAzBA,EACHiB,EAASG,EACTA,EAASH,EAETL,OAAAA,EAAQI,EACsB,QAAzBhB,GAAkC,EAAI,EAG3CY,EAAQI,EACsB,QAAzBhB,EAAiC,GAAK,EAGxC,IAIXK,EAAKJ,QAAQ,SAACoB,GAAQ1B,OAAAA,EAAM2B,YAAYD,SAK5CvB,EAASG,QAAQ,SAACoB,GAChBA,EAAIjB,iBAAiB,QAAS,WAC5BN,EAASG,QAAQ,SAACsB,GAAMA,OAAAA,EAAEC,UAAUC,OAAO,YAE3CJ,EAAIG,UAAUE,IAAI,cAOtB,IAAMC,EAAOlC,SAASmC,cAAc,QAEpCD,EAAKE,UAAY,oBAEjBF,EAAKG,OAAS,YACdH,EAAKI,OAAS,OAEdtC,SAASuC,KAAKV,YAAYK,GAG1B,IAAMM,EAAYxC,SAASmC,cAAc,SAEzCK,EAAUnB,YAAc,QAExB,IAAMoB,EAAYzC,SAASmC,cAAc,SAEzCM,EAAUC,KAAO,OAEjBD,EAAUE,KAAO,OACjBF,EAAUG,UAAW,EACrBH,EAAUI,aAAa,UAAW,QAElCL,EAAUX,YAAYY,GACtBP,EAAKL,YAAYW,GAGjB,IAAMM,EAAgB9C,SAASmC,cAAc,SAE7CW,EAAczB,YAAc,YAE5B,IAAM0B,EAAgB/C,SAASmC,cAAc,SAE7CY,EAAcL,KAAO,OAErBK,EAAcJ,KAAO,WACrBI,EAAcH,UAAW,EACzBG,EAAcF,aAAa,UAAW,YAEtCC,EAAcjB,YAAYkB,GAC1Bb,EAAKL,YAAYiB,GAGjB,IAAME,EAAchD,SAASmC,cAAc,SAE3Ca,EAAY3B,YAAc,UAE1B,IAAM4B,EAAejD,SAASmC,cAAc,UAE5Cc,EAAaN,KAAO,SACpBM,EAAaL,UAAW,EAExBK,EAAaJ,aAAa,UAAW,UAGrC,IAAMK,EAAU,CACd,QACA,YACA,SACA,WACA,YACA,iBAIFA,EAAQ1C,QAAQ,SAAC2C,GACTC,IAAAA,EAASpD,SAASmC,cAAc,UAEtCiB,EAAO/B,YAAc8B,EACrBF,EAAapB,YAAYuB,KAG3BJ,EAAYnB,YAAYoB,GACxBf,EAAKL,YAAYmB,GAGjB,IAAMK,EAAWrD,SAASmC,cAAc,SAExCkB,EAAShC,YAAc,OAEvB,IAAMiC,EAAWtD,SAASmC,cAAc,SAExCmB,EAASZ,KAAO,SAEhBY,EAASX,KAAO,MAChBW,EAASV,UAAW,EACpBU,EAASC,IAAM,EACfD,EAAST,aAAa,UAAW,OAEjCQ,EAASxB,YAAYyB,GACrBpB,EAAKL,YAAYwB,GAGjB,IAAMG,EAAcxD,SAASmC,cAAc,SAE3CqB,EAAYnC,YAAc,UAE1B,IAAMoC,EAAczD,SAASmC,cAAc,SAE3CsB,EAAYf,KAAO,OAEnBe,EAAYd,KAAO,SACnBc,EAAYb,UAAW,EACvBa,EAAYZ,aAAa,UAAW,UAEpCW,EAAY3B,YAAY4B,GACxBvB,EAAKL,YAAY2B,GAGjBC,EAAY9C,iBAAiB,OAAQ,WAC7B+C,IAAAA,EAAWD,EAAYE,MAEvBC,EAAenC,WAAWiC,EAAShC,QAAQ,WAAY,KAExDmC,MAAMD,GAGTH,EAAYE,MAAQ,GAFpBF,EAAYE,MAAQC,EAAaE,mBAOrC,IAAMC,EAAS/D,SAASmC,cAAc,UA4DtC,SAAS6B,EAAuD,GAAxCC,IAAAA,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,SAAkBC,GAARhB,EAAAA,OAAQgB,EAAAA,KAAKC,EAAAA,EAAAA,OAChDH,GAAAA,EAAMI,OAAS,EASV,OARPC,EACE,GACA,GACA,mBACA,2CACA,UAGK,EAGL,IAACJ,EASI,OARPI,EACE,GACA,GACA,mBACA,6CACA,UAGK,EAGHC,IAAAA,EAAYC,SAASL,EAAK,IAE5BN,GAAAA,MAAMU,IAAcA,EAAY,IAAMA,EAAY,GAU7C,OATPD,EACE,GACA,GACA,mBACA,iCACA,SAEFhB,EAASK,MAAQ,IAEV,EAGHc,IAAAA,EAAehD,WAAW2C,EAAO1C,QAAQ,WAAY,KAEvDmC,QAAAA,MAAMY,IAAiBA,EAAe,KACxCH,EACE,GACA,GACA,mBACA,0CACA,SAEFb,EAAYE,MAAQ,IAEb,GAOX,SAASW,EAAiBI,EAAQC,EAAUC,EAAOC,EAAanC,GACxDoC,IAAAA,EAAe9E,SAASmC,cAAc,OAE5C2C,EAAa1C,UAA4BM,gBAAAA,OAAAA,GACzCoC,EAAajC,aAAa,UAAW,gBAErCiC,EAAaC,MAAMC,QAEVN,uCAAAA,OAAAA,EACEC,oBAAAA,OAAAA,EAHX,WAMAG,EAAaG,UACSL,2BAAAA,OAAAA,EACfC,kBAAAA,OAAAA,EAFP,YAKA7E,SAASuC,KAAKV,YAAYiD,GAE1BI,WAAW,WAAMJ,OAAAA,EAAa9C,UAAU,KAxI1C+B,EAAOrB,KAAO,SACdqB,EAAO1C,YAAc,gBAErBa,EAAKL,YAAYkC,GAGjBA,EAAOpD,iBAAiB,QAAS,SAACwE,GAChCA,EAAEC,iBAEInB,IAAAA,EAAQxB,EAAUkB,MAAMrC,OACxB4C,EAAWnB,EAAcY,MAAMrC,OAC/B6B,EAASF,EAAaU,MAAMrC,OAC5B6C,EAAMb,EAASK,MAAMrC,OACrB8C,EAASX,EAAYE,MAAMrC,OAI/B,GAAC0C,EAAa,CACZC,MAAAA,EACAC,SAAAA,EACAf,OAAAA,EACAgB,IAAAA,EACAC,OAAAA,IALF,CAYIxC,IAAAA,EAAM5B,SAASmC,cAAc,MAEnCP,EAAIqD,UACEhB,WAAAA,OAAAA,EACAC,iBAAAA,OAAAA,EACAf,iBAAAA,OAAAA,EACAgB,iBAAAA,OAAAA,EACCC,kBAAAA,OAAAA,EALP,aAQAlE,EAAM2B,YAAYD,GAGlBa,EAAUkB,MAAQ,GAClBL,EAASK,MAAQ,GACjBZ,EAAcY,MAAQ,GACtBV,EAAaU,MAAQV,EAAaoC,QAAQ,GAAG1B,MAC7CF,EAAYE,MAAQ,GAEpBW,EACE,GACA,GACA,2BACA,+BACA,cAyFJ,IAAIgB,EAAkB,KAyCtB,SAASC,EAAkD,GAAhCC,IAAAA,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,aACnCC,EAAWF,EAAM9B,MAAMrC,OAM3BkE,EAAQnE,YAHLsE,GACmBD,EAMxBJ,EAAkB,KAlDpBpF,EAAMS,iBAAiB,WAAY,SAACwE,GAC5BK,IAAAA,EAAUL,EAAES,OAGdJ,GAAoB,OAApBA,EAAQK,UAAoBL,EAAQvF,cAAc,SAAlDuF,CAKAF,GACFC,EAAgBD,GAGZI,IAAAA,EAAeF,EAAQnE,YAAYC,OACnCmE,EAAQzF,SAASmC,cAAc,SAErCsD,EAAM/C,KAAO,OACb+C,EAAM9B,MAAQ+B,EACdD,EAAMrD,UAAY,aAElBoD,EAAQnE,YAAc,GACtBmE,EAAQ3D,YAAY4D,GACpBA,EAAMK,QACNR,EAAkB,CAAEE,QAAAA,EAASC,MAAAA,EAAOC,aAAAA,GAGpCD,EAAM9E,iBAAiB,OAAQ,WAC7B4E,EAAgBD,KAIlBG,EAAM9E,iBAAiB,UAAW,SAACoF,GAChB,UAAbA,EAAKC,KACPT,EAAgBD","file":"main.b122af3e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// Вибір елементів таблиці\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\nconst headers = table.querySelectorAll('th');\nconst rowtable = table.querySelectorAll('tr');\n\n// індекс поточного відсортування стовпців\nlet currentSortIndex = -1;\n// сортування asc або desc\nlet currentSortDirection = 'asc';\n\n// Реалізувати сортування таблиці клацанням по заголовку (в двох напрямках)\nheaders.forEach((th, index) => {\n  th.addEventListener('click', () => {\n    // перетворюю рядки в масив\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    // перевіряю чи є поточні стопці числовими стопцями (3 і 4 є числовим)\n    const isNumberColumn = index === 3 || index === 4;\n\n    // Якщо клікаємо на той самий стовпець декілька разів сортування міняється\n    if (index === currentSortIndex) {\n      // переключаю напрямок сортування\n      currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      // якщо натиснути на новий стопчик починати з asc\n      currentSortDirection = 'asc';\n    }\n    // оновлюю індекс стопця який зараз сортується\n    currentSortIndex = index;\n\n    // сортування рядків\n    rows.sort((a, b) => {\n      // отримую текст з вмісту стовпця\n      const aText = a.cells[index].textContent.trim();\n      const bText = b.cells[index].textContent.trim();\n\n      if (isNumberColumn) {\n        // перетворюю на число з плаваючою комою\n        const aValue = parseFloat(aText.replace(/[$,]/g, ''));\n        const bValue = parseFloat(bText.replace(/[$,]/g, ''));\n\n        // повертає за зростанням або спаданням\n        return currentSortDirection === 'asc'\n          ? aValue - bValue\n          : bValue - aValue;\n      } else {\n        if (aText < bText) {\n          return currentSortDirection === 'asc' ? -1 : 1;\n        }\n\n        if (aText > bText) {\n          return currentSortDirection === 'asc' ? 1 : -1;\n        }\n\n        return 0;\n      }\n    });\n    // після сортування повертаю рядки до tbody в правильному порядку\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n\n// Коли користувач клацає рядок, він має стати виділеним\nrowtable.forEach((row) => {\n  row.addEventListener('click', () => {\n    rowtable.forEach((r) => r.classList.remove('active'));\n\n    row.classList.add('active');\n  });\n});\n\n/* Напишіть сценарій, щоб додати форму до документа */\n\n// створення форми\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\n\nform.action = '/register';\nform.method = 'POST';\n\ndocument.body.appendChild(form);\n\n// поле для Name\nconst nameLabel = document.createElement('label');\n\nnameLabel.textContent = 'Name:';\n\nconst nameInput = document.createElement('input');\n\nnameInput.type = 'text';\n\nnameInput.name = 'name';\nnameInput.required = true;\nnameInput.setAttribute('data-qa', 'name');\n\nnameLabel.appendChild(nameInput);\nform.appendChild(nameLabel);\n\n// поле для Position\nconst positionLabel = document.createElement('label');\n\npositionLabel.textContent = 'Position:';\n\nconst positionInput = document.createElement('input');\n\npositionInput.type = 'text';\n\npositionInput.name = 'position';\npositionInput.required = true;\npositionInput.setAttribute('data-qa', 'position');\n\npositionLabel.appendChild(positionInput);\nform.appendChild(positionLabel);\n\n// поле для Office\nconst officeLabel = document.createElement('label');\n\nofficeLabel.textContent = 'Office:';\n\nconst officeSelect = document.createElement('select');\n\nofficeSelect.name = 'office';\nofficeSelect.required = true;\n\nofficeSelect.setAttribute('data-qa', 'office');\n\n// створюю масив міст\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\n// додаю кожен офіс до option\noffices.forEach((office) => {\n  const option = document.createElement('option');\n\n  option.textContent = office;\n  officeSelect.appendChild(option);\n});\n\nofficeLabel.appendChild(officeSelect);\nform.appendChild(officeLabel);\n\n// поле для Age\nconst ageLabel = document.createElement('label');\n\nageLabel.textContent = 'Age:';\n\nconst ageInput = document.createElement('input');\n\nageInput.type = 'number';\n\nageInput.name = 'age';\nageInput.required = true;\nageInput.min = 0;\nageInput.setAttribute('data-qa', 'age');\n\nageLabel.appendChild(ageInput);\nform.appendChild(ageLabel);\n\n// поле для Salary\nconst salaryLabel = document.createElement('label');\n\nsalaryLabel.textContent = 'Salary:';\n\nconst salaryInput = document.createElement('input');\n\nsalaryInput.type = 'text';\n\nsalaryInput.name = 'salary';\nsalaryInput.required = true;\nsalaryInput.setAttribute('data-qa', 'salary');\n\nsalaryLabel.appendChild(salaryInput);\nform.appendChild(salaryLabel);\n\n// обробляю введення зарплати\nsalaryInput.addEventListener('blur', () => {\n  const rawValue = salaryInput.value;\n  // видаляю всі символи окрім чисел і розділових крапок\n  const numericValue = parseFloat(rawValue.replace(/[^0-9.]/g, ''));\n\n  if (!isNaN(numericValue)) {\n    salaryInput.value = numericValue.toLocaleString();\n  } else {\n    salaryInput.value = '';\n  }\n});\n\n// кнопка для відправки форми\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nform.appendChild(button);\n\n// обробка натискання кнопки\nbutton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const namee = nameInput.value.trim();\n  const position = positionInput.value.trim();\n  const office = officeSelect.value.trim();\n  const age = ageInput.value.trim();\n  const salary = salaryInput.value.trim();\n\n  // перевірка валідності\n  if (\n    !validateForm({\n      namee,\n      position,\n      office,\n      age,\n      salary,\n    })\n  ) {\n    return;\n  }\n\n  // додаю новий рядок до таблиці\n  const row = document.createElement('tr');\n\n  row.innerHTML = `\n  <td>${namee}</td>\n  <td>${position}</td>\n  <td>${office}</td>\n  <td>${age}</td>\n  <td>$${salary}</td>\n  `;\n\n  tbody.appendChild(row);\n\n  // очищую форму\n  nameInput.value = '';\n  ageInput.value = '';\n  positionInput.value = '';\n  officeSelect.value = officeSelect.options[0].value;\n  salaryInput.value = '';\n\n  pushNotification(\n    10,\n    10,\n    'Title of Success message',\n    'Employee added successfully.',\n    'success',\n  );\n});\n\n// функція для валідації форми\nfunction validateForm({ namee, position, office, age, salary }) {\n  if (namee.length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Validation Error',\n      'Name must be at least 4 characters long.',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (!position) {\n    pushNotification(\n      10,\n      10,\n      'Validation Error',\n      'The position must be entered in the field.',\n      'error',\n    );\n\n    return false;\n  }\n\n  const parsedAge = parseInt(age, 10);\n\n  if (isNaN(parsedAge) || parsedAge < 18 || parsedAge > 90) {\n    pushNotification(\n      10,\n      10,\n      'Validation Error',\n      'Age must be between 18 and 90.',\n      'error',\n    );\n    ageInput.value = '';\n\n    return false;\n  }\n\n  const parsedSalary = parseFloat(salary.replace(/[^0-9.]/g, ''));\n\n  if (isNaN(parsedSalary) || parsedSalary < 0) {\n    pushNotification(\n      10,\n      10,\n      'Validation Error',\n      'Salary must be a valid positive number.',\n      'error',\n    );\n    salaryInput.value = '';\n\n    return false;\n  }\n\n  return true;\n}\n\n// функція для створення повідомлення\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.style.cssText = `\n    position: absolute;\n    top: ${posTop}px;\n    right: ${posRight}px;\n  `;\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n}\n\n// редагування комірки\n\n// зберігаю активну комірку для введення\nlet activeInputCell = null;\n\ntbody.addEventListener('dblclick', (e) => {\n  const cellRow = e.target;\n\n  // перевірка чи натиснута комірка\n  if (cellRow.tagName !== 'TD' || cellRow.querySelector('input')) {\n    return;\n  }\n\n  // завершую редагування якщо є активне введення\n  if (activeInputCell) {\n    saveCellChanges(activeInputCell);\n  }\n\n  const origanalText = cellRow.textContent.trim(); // початковий  текст\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.value = origanalText;\n  input.className = 'cell-input';\n\n  cellRow.textContent = '';\n  cellRow.appendChild(input);\n  input.focus(); // ставлю фокус\n  activeInputCell = { cellRow, input, origanalText };\n\n  // обробка поля введення\n  input.addEventListener('blur', () => {\n    saveCellChanges(activeInputCell);\n  });\n\n  // натискання enter\n  input.addEventListener('keydown', (even) => {\n    if (even.key === 'Enter') {\n      saveCellChanges(activeInputCell);\n    }\n  });\n});\n\n// функція ля збрерагання змін у комірці\nfunction saveCellChanges({ cellRow, input, origanalText }) {\n  const newValue = input.value.trim();\n\n  // якщо значення введене порожнє повертає початкове знаяення\n  if (!newValue) {\n    cellRow.textContent = origanalText;\n  } else {\n    cellRow.textContent = newValue;\n  }\n\n  // скидаю активний стан\n  activeInputCell = null;\n}\n"]}